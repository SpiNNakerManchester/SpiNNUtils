import os
import sys

MAX_PER_FILE = 100


def c_files(dir):
    for dir_name, subdir_list, file_list in os.walk(dir):
        for file_name in file_list:
            _, extension = os.path.splitext(file_name)
            if extension in [".c", ".h"]:
                yield file_name


def append_c_files(start, range_end, dir, log_ranges_path):
    log_ranges = dict()
    range_start = 0
    with open(log_ranges_path, 'r') as log_ranges_file:
        data_lines = iter(log_ranges_file)
        next(data_lines)  # Ignore do not edit
        for line in data_lines:
            parts = line.split(" ", 1)
            range_start = max(range_start, int(parts[0]))
            assert (range_start - start) % MAX_PER_FILE == 0
            assert (range_start + MAX_PER_FILE) < range_end
            log_ranges[parts[1].strip()] = int(parts[0])

    with open(log_ranges_path, 'a') as log_ranges_file:
        for file_name in c_files(dir):
            if file_name not in log_ranges:
                range_start += MAX_PER_FILE
                assert (range_start + MAX_PER_FILE) < range_end
                log_ranges_file.write("{} {}\n".format(range_start, file_name))


def number_all_c_files(start, range_end, dir, log_ranges_path):
    range_start = start
    with open(log_ranges_path, 'w') as log_ranges_file:
        log_ranges_file.write("AUTOGENERATED DO NOT EDIT\n")
        for file_name in c_files(dir):
            range_start += MAX_PER_FILE
            assert (range_start + MAX_PER_FILE) < range_end
            log_ranges_file.write("{} {}\n".format(range_start, file_name))


def number_c_files(start, range_end, dir=None):
    if not dir:
        dir = os.getcwd()
    else:
        dir = os.path.abspath(dir)
    log_ranges_path = os.path.join(dir, "log_ranges.txt")
    if os.path.exists(log_ranges_path):
        # touch the file so MAKE knows it is updated even if not changed
        os.utime(log_ranges_path, None)
        append_c_files(start, range_end, dir, log_ranges_path)
    else:
        number_all_c_files(start, range_end, dir, log_ranges_path)


if __name__ == '__main__':
    if len(sys.argv) < 4:
        print ("Reguired arguments are start index, "
               "range end (for safety only) and directory")
        sys.exit(1)

    start = int(sys.argv[1])
    range_end = int(sys.argv[2])
    dir = sys.argv[3]
    number_c_files(start, range_end, dir)

